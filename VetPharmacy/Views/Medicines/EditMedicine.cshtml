@model VetPharmacy.Models.OrderComponent
@{
    ViewBag.Title = "EditMedicine";
}

<h2>Choose The Medicine : </h2>
<br /><br />


<div class="panel panel-primary">
    <div class="panel-heading">Choose Medicine :</div>
    <div class="panel-body">
        <div class="col-xs-3">
            @*@Html.LabelFor(model => model.medicine.MedicineName, new { @class = "col-2 col-form-label" })*@
            <div class="col-10">
                <input type="text" class="form-control" placeholder="Enter Medicine Name" id="MedicineName2" autocomplete="off" onchange="GetMedicineDate()" />
                @*@Html.TextBoxFor(model => model.medicine.MedicineName, new { @class = "form-control", @AutoCompleteType = "Disabled" })*@
            </div>
        </div>

    </div>
</div>
<div class="panel panel-primary">
    <div class="panel-heading">Medicine info :</div>
    <div class="panel-body">
        <div class="form-horizontal">
            <div class="form-group">
                @Html.LabelFor(model => model.medicine.MedicineName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.medicine.MedicineName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.medicine.MedicineName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.medicine.IsWholeSale, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.medicine.IsWholeSale)
                        @Html.ValidationMessageFor(model => model.medicine.IsWholeSale, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.medicine.Unit_Id, "Unit_Id", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Unit_Id", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.medicine.Unit_Id, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.medicine.MedicineCapacity, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.medicine.MedicineCapacity, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.medicine.MedicineCapacity, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.medicine.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.medicine.Comment, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.medicine.Comment, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
        </div>
</div>
<div class="panel panel-primary">
    <div class="panel-heading">Medicine shipments :</div>
    <div class="panel-body">
        <table id="example" class="table table-striped table-bordered" style="width:100%">
            <thead>
                <tr>
                    <th>@Html.LabelFor(model => model.shipment.ShipmentId, new {  })</th>
                    <th>@Html.LabelFor(model => model.shipment.Order.OrderDate, new {  })</th>
                    <th>@Html.LabelFor(model => model.shipment.OriginalPrice, new { })</th>
                    <th>@Html.LabelFor(model => model.shipment.WholesalePrice, new { })</th>
                    <th>@Html.LabelFor(model => model.shipment.ShipmentAmount, new { })</th>
                    <th>@Html.LabelFor(model => model.shipment.ShipmentRemainderAmount, new {  })</th>
                    
                    <th>Edit</th>

                    
                </tr>
                @*<tr>
                    <th><input type="button" class="form-control" id="ShipmentId" autocomplete="off" /></th>
                    <th><input type="button" class="form-control" id="OrderDate" autocomplete="off" /></th>
                    <th><input type="button" class="form-control" id="OriginalPrice" autocomplete="off" /></th>
                    <th><input type="button" class="form-control" id="ShipmentAmount" autocomplete="off" /></th>
                    <th><input type="button" class="form-control" id="ShipmentRemainderAmount" autocomplete="off" /></th>
                </tr>*@

                @*<tr>
                    <th>@Html.TextBoxFor(model => model.shipment.ShipmentId, new { @class = "form-control" })</th>
                    <th>@Html.TextBoxFor(model => model.shipment.Order.OrderDate, new { @class = "form-control" })</th>
                    <th>@Html.TextBoxFor(model => model.shipment.OriginalPrice, new { @class = "form-control" })</th>
                    <th>@Html.TextBoxFor(model => model.shipment.ShipmentAmount, new { @class = "form-control" })</th>
                    <th>@Html.TextBoxFor(model => model.shipment.ShipmentRemainderAmount, new { @class = "form-control" })</th>
                </tr>*@
            </thead>
            <tbody>
                
            </tbody>
        </table>
</div>
    <input type="button" class="btn btn-default" value="Edit" id="" onclick="SubmetChanges()" style="margin:30px;" />
</div>  


<script type="text/javascript">
    var ShipmentIdTemp ;
    var ShipmentAmountTemp ;
    var OriginalPriceTemp ;
    var WholesalePriceTemp ;
    var ShipmentRemainderAmountTemp ;
    $(document).ready(function () {
        $('input[id="MedicineName2"]').autocomplete({
            source: '/Invoices/GetMedicineName'
        });
        $('#example').DataTable({});
    })
    function GetMedicineDate() {
        var medicine_name=$("#MedicineName2").val();
        $("table[id='example']").each(function () {
            $(this).dataTable().fnDestroy();
            $(this).find("tbody tr ").each(function () { $(this).remove() });

        })
    //    $("table[id='example'] tbody").append("<tr><td>System Architect</td><td>Edinburgh</td><td>61</td><td>2011/04/25</td><td>$320,800</td></tr>")
  
        $.ajax({
            type: "get",
            url: "/Medicines/GetMedicineDate",
            data: { medicine_name },
            async: false,
            success: function (data) {
                console.log(data);
                for(w=0;w<data.length;w++)
                {
                    $("table[id='example']").append(
                //'<tr>'+
                //    '<th><input type="text" class="form-control" id="ShipmentId" autocomplete="off" value=' + data[w].ShipmentId + ' /></th>' +
                //   ' <th><input type="text" class="form-control" id="OrderDate" value=' + data[w].OrderDate + ' autocomplete="off" /></th>' +
                //    '<th><input type="text" class="form-control" id="OriginalPrice" value=' + data[w].OriginalPrice + ' autocomplete="off" /></th>' +
                //    '<th><input type="text" class="form-control" id="ShipmentAmount" value=' + data[w].ShipmentAmount + ' autocomplete="off" /></th>' +
                //    '<th><input type="text" class="form-control" id="ShipmentRemainderAmount" value=' + data[w].ShipmentRemainderAmount + ' autocomplete="off" /></th>' +
                //'</tr>'
                                '<tr id=' + data[w].ShipmentId + '>' +
                    '<th>'+ data[w].ShipmentId +'</th>' +
                   ' <th>' + moment(data[w].OrderDate).format('LL') + ' </th>' +
                    '<th><label style="font:large" id="OriginalPrice">' + data[w].OriginalPrice + '</label> </th>' +
                    '<th><label style="font:large" id="ShipmentRemainderAmount">' + data[w].WholesalePrice + '</th>' +
                    '<th><label style="font:large" id="ShipmentAmount">' + data[w].ShipmentAmount + ' </th>' +
                    '<th><label style="font:large" id="ShipmentRemainderAmount">' + data[w].ShipmentRemainderAmount + '</th>' +
                    '<th><input style="font:large" type="button" class="btn btn-default" value="Edit" id=' + data[w].ShipmentId + ' onclick="NavToEdit(' + data[w].ShipmentId + ')" /></th>' +
                '</tr>'

                    )
                }
                
            }
        })
        $('#example').DataTable({});
    }
    function ShowModel() {
        $("#myModal").modal('show');
    }
    function NavToEdit(ShipmentId) {
   
        $.ajax({
            data: { ShipmentId },
            url: "/Shipments/GetShipmentData",
            async: false,
            success: function (data) {
                console.log(data);

                $("#myModal").modal('show');
                $("#ShipmentIdM ").val(data.ShipmentId);
                $("#ShipmentAmountM ").val(data.ShipmentAmount);
                $("#OriginalPriceM").val(data.OriginalPrice);
                $("#WholesalePriceM").val(data.WholesalePrice);
                $("#ShipmentRemainderAmountM").val(data.ShipmentRemainderAmount);
                ShipmentIdTemp = ShipmentId;
                ShipmentAmountTemp = $("table[id='example'] tr[id='" + ShipmentId + "'] label[id='ShipmentAmount']").text();
                OriginalPriceTemp = $("table[id='example'] tr[id='" + ShipmentId + "'] label[id='OriginalPrice']").text();
                WholesalePriceTemp = $("table[id='example'] tr[id='" + ShipmentId + "'] label[id='WholesalePrice']").text();
                ShipmentRemainderAmountTemp = $("table[id='example'] tr[id='" + ShipmentId + "'] label[id='ShipmentRemainderAmount']").text();
                
            }
        })
            
        

    }
    function EditInTable() {
        
    //    alert($("input[id='ShipmentIdM']").val());
        //   alert($("label[id='OriginalPrice']").text());
        $("table[id='example'] tr[id='" + $("input[id='ShipmentIdM']").val() + "'] label[id='OriginalPrice']").text($("#OriginalPriceM").val()) ;
        if ($("table[id='example'] tr[id='" + $("input[id='ShipmentIdM']").val() + "'] label[id='OriginalPrice']").text() != OriginalPriceTemp) {
        $("table[id='example'] tr[id='" + $("input[id='ShipmentIdM']").val() + "'] label[id='OriginalPrice']").css("color", "#04B404");
        $("table[id='example'] tr[id='" + $("input[id='ShipmentIdM']").val() + "'] label[id='ShipmentIdM']").css("color", "#04B404");

        }
        $("table[id='example'] tr[id='" + $("input[id='ShipmentIdM']").val() + "'] label[id='ShipmentAmount']").text($("#ShipmentAmountM ").val());
        if ($("table[id='example'] tr[id='" + $("input[id='ShipmentIdM']").val() + "'] label[id='ShipmentAmount']").text()!=ShipmentAmountTemp) {

        $("table[id='example'] tr[id='" + $("input[id='ShipmentIdM']").val() + "'] label[id='ShipmentAmount']").css("color", "#04B404");
        $("table[id='example'] tr[id='" + $("input[id='ShipmentIdM']").val() + "'] label[id='ShipmentIdM']").css("color", "#04B404");

        }
        $("table[id='example'] tr[id='" + $("input[id='ShipmentIdM']").val() + "'] label[id='ShipmentRemainderAmount']").text($("#ShipmentRemainderAmountM").val());
        if ($("table[id='example'] tr[id='" + $("input[id='ShipmentIdM']").val() + "'] label[id='ShipmentRemainderAmount']").text() != ShipmentRemainderAmountTemp) {
        $("table[id='example'] tr[id='" + $("input[id='ShipmentIdM']").val() + "'] label[id='ShipmentRemainderAmount']").css("color", "#04B404");
        $("table[id='example'] tr[id='" + $("input[id='ShipmentIdM']").val() + "'] label[id='ShipmentIdM']").css("color", "#04B404");
        }

        $("table[id='example'] tr[id='" + $("input[id='ShipmentIdM']").val() + "'] label[id='WholesalePrice']").text($("#WholesalePriceM").val());
        if ($("table[id='example'] tr[id='" + $("input[id='ShipmentIdM']").val() + "'] label[id='WholesalePrice']").text() != WholesalePriceTemp) {
            $("table[id='example'] tr[id='" + $("input[id='ShipmentIdM']").val() + "'] label[id='WholesalePrice']").css("color", "#04B404");
            $("table[id='example'] tr[id='" + $("input[id='ShipmentIdM']").val() + "'] label[id='ShipmentIdM']").css("color", "#04B404");
        
        }

        //  $("table[id='example'] tr[id='" + $("input[id='ShipmentIdM']").val() + "'] label[id='WholesalePrice']").text();
      //  alert(row.find("#ShipmentAmountM").val())
    }
    function SubmetChanges() {
        var Shipments=[];

        $("table[id='example'] tbody tr").each(function () {
            var Shipment = {
                ShipmentId: "", OriginalPrice: "", ShipmentAmount: "", ShipmentRemainderAmount: ""
            };
            Shipment.ShipmentId = $(this).find("label[id='ShipmentId']").text();
            Shipment.OriginalPrice = $(this).find("label[id='OriginalPrice']").text();
            Shipment.ShipmentAmount = $(this).find("label[id='ShipmentAmount']").text();
            Shipment.ShipmentRemainderAmount = $(this).find("label[id='ShipmentRemainderAmount']").text();
            Shipments.push(Shipment);
            console.log(Shipment);
        })
        console.log(Shipments);
    }

</script>


<input type="button" value="Add" id="123" onclick="GetMedicineDate()" class="form-control"  />
<input class="btn btn-default" value="Show Model" onclick="ShowModel()" />

<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>

            </div>
            <div class="form-horizontal" style="text-align: center; margin:50px;">
                <h4>Shipment</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.shipment.ShipmentId)
                <div class="form-group">
                    @*@Html.LabelFor(model => model.shipment.ShipmentId, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <label class="control-label col-md-2" >ShipmentId</label>
                    <div class="col-md-5">
                        @*@Html.EditorFor(model => model.shipment.ShipmentAmount, new { htmlAttributes = new { @class = "form-control" } })*@
                        <input type="number" class="form-control" id="ShipmentIdM" autocomplete="off"  disabled="disabled"/>
                    </div>
                </div>
                <div class="form-group">
                    @*@Html.LabelFor(model => model.shipment.OriginalPrice, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <label class="control-label col-md-2">OriginalPrice</label>

                    <div class="col-md-5">
                        @*@Html.EditorFor(model => model.shipment.OriginalPrice, new { htmlAttributes = new { @class = "form-control" } })*@
                        <input type="number" class="form-control" id="OriginalPriceM" autocomplete="off" />                    </div>
                </div>
                <div class="form-group">
                    @*@Html.LabelFor(model => model.shipment.WholesalePrice, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <label class="control-label col-md-2">WholesalePrice</label>

                    <div class="col-md-5">
                        @*@Html.EditorFor(model => model.shipment.WholesalePrice, new { htmlAttributes = new { @class = "form-control" } })*@
                        <input type="number" class="form-control" id="WholesalePriceM" autocomplete="off" />
                    </div>
                    </div>              
                <div class="form-group">
                    @*@Html.LabelFor(model => model.shipment.ShipmentAmount, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <label class="control-label col-md-2">ShipmentAmount</label>

                    <div class="col-md-5">
                        @*@Html.EditorFor(model => model.shipment.ShipmentAmount, new { htmlAttributes = new { @class = "form-control" } })*@
                        <input type="number" class="form-control" id="ShipmentAmountM" autocomplete="off" />
                    </div>
                </div>
                <div class="form-group">
                    @*@Html.LabelFor(model => model.shipment.ShipmentRemainderAmount, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <label class="control-label col-md-2">RemainderAmount</label>

                    <div class="col-md-5">
                        @*@Html.EditorFor(model => model.shipment.ShipmentRemainderAmount, new { htmlAttributes = new { @class = "form-control" } })*@
                        <input type="number" class="form-control" id="ShipmentRemainderAmountM" autocomplete="off" />
                    </div>
                    </div>
                

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success"  onclick="EditInTable()" data-dismiss="modal">Edit</button>
            </div>
        </div>
    </div>
</div>